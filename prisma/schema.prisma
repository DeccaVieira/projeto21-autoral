generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cbo {
  id                  Int                   @id @default(autoincrement())
  cbo_code            Int?
  role                String
  procedure_code      Int
  health_professional health_professional[]
}

model cid {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  created_at  DateTime @default(now()) @db.Timestamp(6)
}

model health_professional {
  id                   Int        @id @default(autoincrement())
  name                 String
  cbo_id               Int
  picture_professional String
  professional_number  Int
  cbo                  cbo        @relation(fields: [cbo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  schedule             schedule[]
}

model medical_insurance {
  id                     Int                      @id @default(autoincrement())
  name                   String
  medical_insurance_plan medical_insurance_plan[]
  personal_data          personal_data[]
}

model medical_insurance_plan {
  id                   Int               @id @default(autoincrement())
  name                 String
  medical_insurance_id Int
  medical_insurance    medical_insurance @relation(fields: [medical_insurance_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  personal_data        personal_data[]
}

model personal_data {
  id                                                           Int                    @id @default(autoincrement())
  user_id                                                      Int                    @unique
  created_at                                                   DateTime               @default(now()) @db.Timestamp(6)
  medical_insurance                                            Int
  medical_insurance_plan                                       Int
  medical_number                                               String
  medical_insurance_medical_insuranceTopersonal_data           medical_insurance      @relation(fields: [medical_insurance], references: [id], onDelete: NoAction, onUpdate: NoAction)
  medical_insurance_plan_medical_insurance_planTopersonal_data medical_insurance_plan @relation(fields: [medical_insurance_plan], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                                                        users                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id            Int            @id @default(autoincrement())
  cpf           String
  name          String
  email         String
  password      String
  created_at    DateTime       @default(now()) @db.Timestamp(6)
  phone_number  String
  personal_data personal_data?
}

model candidate_health_professional {
  id                  Int      @id @default(autoincrement())
  name                String
  email               String
  cpf                 String
  uf_registration     String
  registration_type   String
  professional_number Int
  phone_number        String
  created_at          DateTime @default(now()) @db.Timestamp(6)
}

model schedule {
  id                  Int                 @id @default(autoincrement())
  professional_id     Int
  date_schedule       DateTime            @db.Date
  hour_schedule       String              @db.Char(5)
  patient_id          Int                 @default(0)
  health_professional health_professional @relation(fields: [professional_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
